---
# tasks file for kubernetes

#----------------------------------准备 kubernetes 环境 -------------------------------------
- name: 创建工作目录
  file:
    path: "{{ kubernetes_work_dir }}/{{ item }}"
    state: directory
  with_items: 
    - bin
    - cfg
    - ssl

- name: 创建日志目录
  file:
    path: "/var/log/kubernetes{{ item }}"
    state: directory
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- name: 分发并解压 kubernetes 软件包
  unarchive:
    src: "{{ item }}"
    dest:  "{{ tmp_dir }}"
  with_fileglob:
    - "{{ software_dir }}/kubernetes*.tar.gz"

- name: 移动 kubernetes 二进制文件
  when: inventory_hostname in groups['master']
  shell: |
    cp -fr {{ tmp_dir }}/kubernetes/server/bin/{kube-apiserver,kube-controller-manager,kube-scheduler,kubectl} /usr/local/bin/

#---------------------------------- 部署 kubernetes ----------------------------------

- name: 分发 config 生成脚本
  template:
    src: create_config.sh.j2
    dest: "{{ kubernetes_work_dir }}/ssl/create_config.sh"
    mode: 700

- name: 分发配置文件
  template:
    src: "{{ item }}"
    dest: "{{ kubernetes_work_dir }}/cfg/{{ item.split('.j2')[0] }}"
  with_items:
    - kube-apiserver.conf.j2
    - kube-controller-manager.conf.j2
    - kube-scheduler.conf.j2

- name: 分发 service 文件
  template:
    src: "{{ item }}"
    dest: "/etc/systemd/system/{{ item.split('.j2')[0] }}"
    mode: 700
  with_items:
    - kube-apiserver.service.j2
    - kube-controller-manager.service.j2
    - kube-scheduler.service.j2

- name: 将 kubernetes 证书从缓存目录中拷贝至工作目录
  shell: |
    cd {{ tmp_dir }}/ \
    && cp {{ item }} {{ kubernetes_work_dir }}/ssl
  with_items:
    - ca*.pem
    - kube-apiserver*.pem
    - token.csv
    - admin*.pem
    - kube-controller-manager*.pem
    - kube-scheduler*.pem

- name: 创建 config 文件存放目录
  file:
    path: ~/.kube
    state: directory

- name: 生成 config 文件(kube.config | kube-controller-manager.kubeconfig | kube-scheduler.kubeconfig)
  shell: |
    cd {{ kubernetes_work_dir }}/ssl/ \
    && sh create_config.sh

- name: 导出 kube config 路径变量
  shell: export KUBECONFIG=$HOME/.kube/config

- name: 启动 kubernetes 服务
  systemd:
    name: "{{ item }}"
    state: restarted
    enabled: yes
    daemon_reload: yes
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

# - name: 配置 kubectl 命令补全（可选）
#   shell: |
#     yum install -y bash-completion
#     source /usr/share/bash-completion/bash_completion
#     source <(kubectl completion bash)
#     kubectl completion bash > ~/.kube/completion.bash.inc
#     source '/root/.kube/completion.bash.inc'
#     source $HOME/.bash_profile

