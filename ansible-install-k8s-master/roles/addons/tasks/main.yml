---
# tasks file for addons

#---------------------------------- 部署 Calico | CoreDNS -------------------------------------
# 单节点应用即可
- name: Calico 创建 calico.yaml 配置文件
  when: inventory_hostname in groups['mainWorker']
  template:
    src: "{{ item }}"
    dest: "{{ kubernetes_work_dir }}/{{ item.split('.j2')[0] }}"
  with_items:
    - calico.yaml.j2
    - coredns.yaml.j2

- name: Calico 应用配置文件
  when: inventory_hostname in groups['mainWorker']
  shell: |
    cd {{ kubernetes_work_dir }}  \
    && kubectl apply -f calico.yaml \
    && kubectl apply -f coredns.yaml

#---------------------------------- 查看集群状态 -------------------------------------
- name: 获取 node 节点信息
  when: inventory_hostname in groups['mainWorker']
  shell: sleep 5 && kubectl get nodes
  register: nodes_info

- name: 获取 pods 信息
  when: inventory_hostname in groups['mainWorker']
  shell: sleep 5 && kubectl get pods --all-namespaces
  register: pods_info

- name: 获取 csr 信息
  when: inventory_hostname in groups['mainWorker']
  shell: sleep 5 && kubectl get csr
  register: csr_info

- name: 获取集群信息
  when: inventory_hostname in groups['mainWorker']
  shell: sleep 5 && kubectl cluster-info
  register: kube_cluster_info

- name: 获取集群组件状态
  when: inventory_hostname in groups['mainWorker']
  shell: sleep 5 && kubectl get componentstatuses
  register: kube_component_status

- name: 获取命名空间中的资源对象
  when: inventory_hostname in groups['mainWorker']
  shell: sleep 5 && kubectl get all --all-namespaces
  register: kube_all_namespaces

- name: 查看(node | pods | csr | cluster | component | all)
  when: inventory_hostname in groups['mainWorker']
  debug:
    msg:
      - "{{ nodes_info.stdout_lines }}"
      - "{{ pods_info.stdout_lines }}"
      - "{{ csr_info.stdout_lines }}"
      - "{{ kube_cluster_info.stdout_lines }}"
      - "{{ nodes_info.stdout_lines }}"
      - "{{ kube_component_status.stdout_lines }}"
      - "{{ kube_all_namespaces.stdout_lines }}"

#---------------------------------- 部署 dashboard -------------------------------------

#- name: 部署 dashboard | 分发 dashboard.yaml 文件
#  copy:
#    src: "{{ item }}"
#    dest: "{{ kubernetes_work_dir }}/{{ item }}"
#  with_items:
#    - dashboard-admin-user.yaml
#    - dashboard-ClusterRoleBinding.yaml
#    - recommended.yaml
#
#- name: 创建 Dashboard 管理员令牌
#  when: inventory_hostname in groups['mainWorker']
#  shell: |
#    cd {{ kubernetes_work_dir }}  \
#    && kubectl apply -f recommended.yaml  \
#    && kubectl apply -f dashboard-admin-user.yaml  \
#    && kubectl apply -f dashboard-ClusterRoleBinding.yaml
#
#- name: 获取 Dashboard 管理员令牌
#  ignore_errors: yes
#  when: inventory_hostname in groups['mainWorker']
#  shell: |
#    sleep 5 \
#    && web='https://NodeIP:30001'  \
#    && token=$(kubectl describe secrets -n kubernetes-dashboard $(kubectl get  secrets -n kubernetes-dashboard |grep admin-user | awk '{print $1}')) \
#    && echo "访问地址--->$web"  \
#    && echo "令牌内容--->$token"
#  register: ui
#
#- name: Kubernetes Dashboard登录信息
#  when: inventory_hostname in groups['mainWorker']
#  debug: var=ui.stdout_lines

#---------------------------------- 部署 kuboard -------------------------------------

- name: 部署 kuboard | 分发 kuboard.yaml 文件
  copy:
    src: kuboard.yaml
    dest: "{{ kubernetes_work_dir }}/kuboard.yaml"

- name: 挂载 kuboard 服务
  when: inventory_hostname in groups['mainWorker']
  shell: |
    cd {{ kubernetes_work_dir }}  \
    && kubectl apply -f kuboard.yaml

- name: 获取 kuboard 管理员令牌
  when: inventory_hostname in groups['mainWorker']
  shell: |
    sleep 5 \
    && kuboard_web='https://NodeIP:32567'  \
    && kuboard_token=$(kubectl describe secrets -n kube-system $(kubectl get  secrets -n kube-system |grep kuboard-user|awk '{print $1}'))  \
    && echo "访问地址--->$kuboard_web"  \
    && echo "令牌内容--->$kuboard_token"
  register: kuboard_ui

- name: kuboard 登录信息
  when: inventory_hostname in groups['mainWorker']
  debug: var=kuboard_ui.stdout_lines

#---------------------------------- 部署 Helm 客户端 -------------------------------------
#
#- name: 解压 Helm 软件包
#  unarchive:
#    src: "{{ item }}"
#    dest: "{{ tmp_dir }}"
#
#- name: 拷贝 helm 命令到 /usr/bin/
#  shell: cd {{ tmp_dir }} && mv {{ tmp_dir }}/linux-amd64/helm /usr/bin/
#
#- name: 添加 微软 | 阿里云 仓库
#  shell:
#    cmd: helm repo add stable http://mirror.azure.cn/kubernetes/charts
#    cmd: helm repo add aliyun https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts
#    cmd: helm repo update

#---------------------------------- 部署 rook-ceph 分布式存储 -------------------------------------
- name: 创建工作目录
  file:
    path: "/var/lib/kubelet/{{ item }}"
    state: directory
  with_items:
    - pods
    - plugins_registry